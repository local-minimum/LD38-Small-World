untitled-package = "Untitled Package"
default-package-id = "Package"
pattern = "Pattern"
stack-trace = "Stack Trace"

src-line-col = "({0}: Ln {1}, Col {2})"

err-pgmload-bad-magic = "Invalid magic number in header."
err-pgmload-invalid-rst-root = "Root RST is invalid."
err-pgmload-root-instance-fail = "Failed to create root RST."
err-pgmload-bad-type = "Invalid RST type code: {0:X8}"
err-pgmload-rst-creation-fail = "Failed to create RST of type '{0}'."

err-zero-or-negative = "Value must be greater than zero."
err-empty-path = "File path cannot be null or empty."
err-unresolvable-package = "Package '{0}' was unable to resolve dependency '{1}'"
err-invalid-package-version = "Unsupported package version: {0}"
err-missing-package-meta = "Loaded package is missing metadata."
err-empty-pkg-title = "The package title cannot be empty."
err-empty-pkg-id = "The package ID cannot be empty."
err-file-corrupt = "File is corrupt or in an unsupported/unrecognized format."
err-invalid-tablename = "Invalid table name: {0}"
err-invalid-subtypes = "Invalid subtype name(s) found: {0}"
err-incomplete-term-split = "Term split indices must be both positive or both negative."
err-invalid-term-split = "Split index is outside the range of its associated string. Must be less than or equal to the string length."
err-empty-entry = "Empty dictionary entry found."
err-missing-table-name = "Expected #name directive before entry list."
err-empty-property = "Empty property field found."
err-misplaced-directive = "The {0} directive can only be used in the file header."
err-invalid-weight = "Invalid entry weight value."
err-bad-term-count = "Terms per entry must be greater than zero."
err-bad-pattern-name = "Invalid pattern name: {0}"
err-internal-error = "An internal error has occurred. This is often caused by a bug in Rant."
err-internal-error-msg = "An internal error has occurred. This is often caused by a bug in Rant.\nMessage: {0}"
err-missing-pattern = "The pattern '{0}' does not exist."

err-pattern-timeout = "The pattern execution timed out ({0} seconds)."
err-stack-overflow = "Exceeded the maximum stack size."

err-generic-runtime = "An unspecified runtime error was encountered."
err-generic-compiler = "An unspecified compiler error was encountered."
err-unknown-flag = "Unknown flag value: '{0}'. Valid values for this parameter are: {1}"

compiler-errors-found = "{0} compiler errors found:"
compiler-errors-also-found = "{0} compiler errors also found:"
compiler-error-also-found = "One compiler error also found:"
err-compiler-internal = "Internal exception of type '{0}' occurred while compiling. See InnerExcpetion for details.\n\nException message: {1}"
err-compiler-eof = "Unexpected end of file."
err-compiler-unexpected-token = "Unexpected token found: '{0}'"
err-compiler-nonexistent-function = "The specified function '{0}' does not exist."
err-compiler-missing-token = "Expected {0}."
err-compiler-bad-escape = "Invalid escape sequence: {0}"
err-compiler-empty-sylrange = "Empty syllable range."
err-compiler-bad-sylrange-value = "Syllable range values can only be integers."
err-compiler-incomplete-escape = "Incomplete escape sequence."
err-compiler-multiple-subtypes = "Too many subtypes in query. Only one is allowed."
err-compiler-nonexistent-overload = "Function '{0}' has no overload that takes {1} argument(s)."
err-compiler-replacer-argcount = "Replacers require exactly two arguments."
err-compiler-missing-token-eof = "{0} expected, but reached the end of the file."
err-compiler-missing-token-any = "One of these tokens expected: {0}"
err-compiler-missing-token-any-eof = "Unexpected end-of-file. One of these tokens expected: {0}"
err-compiler-unknown-sylrange-token = "Unexpected token in syllable range: {0}"
err-compiler-empty-weight = "Empty block weight."
err-compiler-invalid-constweight = "Invalid weight constant."
err-compiler-incomplete-verbatim = "Incomplete verbatim string."
err-compiler-incomplete-regex = "Incomplete regular expression literal."
err-compiler-bad-escape-quantity = "Invalid escape quantifier. Must be an integer greater than zero."
err-compiler-missing-quantity-comma = "Expected comma after quantity."
err-compiler-invalid-vchar = "Invalid Unicode character name in verbose character literal: {0}"
err-compiler-incomplete-vchar = "Incomplete verbose character literal."

err-table-invalid-class = "Invalid class name: {0}"
err-table-too-few-terms = "Too few terms in entry: Expected {0}, found {1}."
err-table-argc-mismatch = "Argument count mismatch: {0} expects {1}, found {2}"

err-runtime-invalid-dynamic-weight = "Dynamic weight pattern returned an invalid weight value: '{0}'"
err-runtime-missing-var = "The variable '{0}' does not exist."
err-runtime-invalid-arg = "The value '{0}' is not valid for the parameter '{1}' ({2} expected)."
err-runtime-missing-subroutine = "The subroutine '{0}' could not be found."
err-runtime-subarg-mismatch = "The provided arguments do not match the signature of the subroutine [${0}]."
err-runtime-unknown-flag = "Unknown flag name: '{0}'"
err-runtime-unknown-mode = "Unknown mode name: '{0}'. Valid values for this parameter are: {1}"
err-runtime-invalid-string-index = "Index in string is not valid: {0}"
err-runtime-unexpected-type = "Unexpected variable type: Expected {0}, got {1}."
err-runtime-index-out-of-range = "The provided index '{1}' was outside the allowed range: [0, {0}]."
err-runtime-div-by-zero = "Attempted to divide by zero."

acc-carrier-name = "carrier name"
acc-table-name = "table name"
acc-class-filter-rule = "class filter rule"
acc-regex-filter-rule = "regex filter rule"
acc-syllable-range-value = "syllable range value"
acc-function-name = "function name"
acc-subroutine-name = "subroutine name"
acc-arg-name = "argument name"

missing-table = "[Missing Table]"
bad-subtype = "[Bad Subtype]"

func-num-desc = "Prints a random number between the specified minimum and maximum bounds."
func-num-min-desc = "The inclusive minimum value."
func-num-max-desc = "The inclusive maximum value."

func-rep-desc = "Sets the repetition count for the next block."
func-rep-times-desc = "The number of times to repeat the next block."

func-repeach-desc = "Sets the repetition count to the number of items in the next block."

func-sep-desc = "Sets the separator pattern for the next block."
func-sep-separator-desc = "The separator pattern to run between iterations of the next block."

func-rs-desc = "Sets the repetition count and separator pattern for the next block."
func-rs-times-desc = "The number of times to repeat the next block."
func-rs-separator-desc = "The separator pattern for the next block."

func-before-desc = "Sets the iteration prefix of the next block."
func-before-pattern-desc = "The iteration prefix pattern to execute on the next block."

func-after-desc = "Sets the iteration suffix of the next block."
func-after-pattern-desc = "The iteration suffix pattern to execute on the next block."

func-first-desc = "Runs the specified pattern if the current block is on its first iteration. Otherwise, does nothing."
func-first-pattern-desc = "The pattern to run if the condition is met."

func-last-desc = "Runs the specified pattern if the current block is on its last iteration. Otherwise, does nothing."
func-last-pattern-desc = "The pattern to run if the condition is met."

func-sepconj-desc = "Flags the next block as a series and sets the separator and conjunction patterns."
func-sepconj-separator-desc = "The separator pattern to run between iterations of the next block."
func-sepconj-conjunction-desc = "The conjunction pattern to run before the last item."

func-sepoxford-desc = "Flags the next block as a series and sets the separator, Oxford comma, and conjunction patterns."
func-sepoxford-separator-desc = "The separator pattern to run between items."
func-sepoxford-oxford-desc = "The Oxford comma pattern to run before the last item."
func-sepoxford-conjunction-desc = "The conjunction pattern to run before the last item in the series."

func-caps-desc = "Changes the capitalization mode for all open channels."
func-caps-mode-desc = "The capitalization mode to use."

func-chance-desc = "Sets the probability that the next block will be executed."
func-chance-chance-desc = "The probability value [0, 100]."

func-capsinfer-desc = "Infers the capitalization of a given string and sets the capitalization mode to match it."
func-capsinfer-sample-desc = "The string to analyze."